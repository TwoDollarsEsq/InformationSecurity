//
//  ContentView.swift
//  RSA Playground
//
//  Created by Artyom Rudakov on 06.05.2020.
//  Copyright Â© 2020 Artyom Rudakov. All rights reserved.
//

import SwiftUI
import BigInt

extension BigUInt {
    var string: String {
        String(decoding: self.serialize(), as: UTF8.self)
    }
}

extension String {
    var bigUInt: BigUInt {
        BigUInt(Data(self.utf8))
    }
}

// Use pre-built or get one with generateKeyPair
let keys = (public: (modulus: BigUInt("14488270131486050908596253589449594003785785187866966824791732320230610018078360534495020593554923211136875859874029959545034291015768421460573497921424661998869978762273148030835493050552055116963625595651527082880664674428478793015121289635748901312432800012180033102334706585394705606051311695253838935408423635775675149489973330645702517124152645000899209304170067583401418590191338203155927601882082187034815522223035199396124002673749889909635767463619127726522667788040199760929186301603126681000743382628008125622979283902853452397230489547779988526772687834837419422581691828647878364977194013155611409634277"), exponent: BigUInt("65537") as BigUInt),
    private: (modulus: BigUInt("14488270131486050908596253589449594003785785187866966824791732320230610018078360534495020593554923211136875859874029959545034291015768421460573497921424661998869978762273148030835493050552055116963625595651527082880664674428478793015121289635748901312432800012180033102334706585394705606051311695253838935408423635775675149489973330645702517124152645000899209304170067583401418590191338203155927601882082187034815522223035199396124002673749889909635767463619127726522667788040199760929186301603126681000743382628008125622979283902853452397230489547779988526772687834837419422581691828647878364977194013155611409634277"), exponent: BigUInt("2953054189486712361521411652163932995141225850123242486619283158118932642957272075618116256293493206194460956958623254033638525708967981046894743202075020751345120715114282182521331708336883779428416172646186105148540804751752746038054689518200921978904700284765870915375848918438477157722102348676332155868936447915120251728167070119130239941757657631150991832507730943763748837406869945605088246440161617719316045248103200219396678589753319747717252037930755848222472609111949058967423726071933359009246901307488139747175768297921236043810240761218498152375221977646994559318661121826042418019575331781102110228417"))
)

struct ContentView: View {
    @State var message: String = "Hello, RSA!"
    
    var encrypted: BigUInt {
        encrypt(message.bigUInt, key: keys.public)
    }
    
    var decrypted: BigUInt {
        encrypt(encrypted, key: keys.private)
    }
    
    var body: some View {
        VStack {
            Text("RSA").font(.largeTitle)
            
            TextField("Message", text: $message)
                .lineLimit(0)
            
            Text(
            """
            Encrypted message:
            
            \(encrypted.string)
            
            Decrypted message:
            
            \(decrypted.string)
            """
            )
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
